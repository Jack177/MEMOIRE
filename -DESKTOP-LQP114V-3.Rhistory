# Ajoute une ligne total
nest_substrat_ab <- janitor::adorn_totals(nest_substrat_ab)
# Ajoute une colonne total
nest_substrat_ab$Total <- rowSums(nest_substrat_ab[, c("Cavities"  , "Snails",  "Stems" , "Variable" ,"Vegetation", "Wood" ,"Soil", "Walls")])
# Pourcentage rich Cavities
pct_rich_cav <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Cavities"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Next to stems
#pct_rich_nex <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Next to stems"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Snails
pct_rich_sna <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Snails"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Stems
pct_rich_ste <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Stems"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], digits = 2)
# Pourcentage rich Variable
pct_rich_var <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Variable"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Vegetation
pct_rich_veg <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Vegetation"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Wood
pct_rich_woo <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Wood"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Soil
pct_rich_soi <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Soil"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], digits = 2)
# Pourcentage rich Walls
pct_rich_wal <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Walls"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
nest_substrat_ab[nrow(nest_substrat_ab) + 1,] = c("Pourcentage", pct_rich_cav,pct_rich_sna,pct_rich_soi,pct_rich_ste, pct_rich_var,pct_rich_veg,pct_rich_wal,pct_rich_woo,"")
### Abondance
nest_substrat_ab <-  spread(nest_substrat, key = Nest_area , value = N)
# Ajoute une ligne total
nest_substrat_ab <- janitor::adorn_totals(nest_substrat_ab)
# Ajoute une colonne total
nest_substrat_ab$Total <- rowSums(nest_substrat_ab[, c("Cavities"  , "Snails",  "Stems" , "Variable" ,"Vegetation", "Wood" ,"Soil", "Walls")])
# Pourcentage rich Cavities
pct_ab_cav <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Cavities"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Next to stems
#pct_ab_nex <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Next to stems"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Snails
pct_ab_sna <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Snails"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Stems
pct_ab_ste <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Stems"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], digits = 2)
# Pourcentage rich Variable
pct_ab_var <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Variable"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Vegetation
pct_ab_veg <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Vegetation"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Wood
pct_ab_woo <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Wood"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Soil
pct_ab_soi <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Soil"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], digits = 2)
# Pourcentage rich Walls
pct_ab_wal <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Walls"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
nest_substrat_ab[nrow(nest_substrat_ab) + 1,] = c("Pourcentage", pct_ab_cav,pct_ab_sna,pct_ab_soi,pct_ab_ste, pct_ab_var,pct_ab_veg,pct_ab_wal,pct_ab_woo,"")
View(nest_substrat_ab)
library("readxl")
library(dplyr)
library(plotly)
library(ggplot2)
library(viridis) # couleur daltonien
library(tidyr) # fonction gather
library("writexl")
# Tour PC
setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW/Traits abeilles")
# Laptop
#setwd("C:/Users/Jordan/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2/Traits abeilles")
SpecCondStat <- read_excel("SpecCondStat_traits.xls")
# Nom plus compact
SCS <- SpecCondStat
# Retirer le site de Condorcet
SCS <- filter(SCS, TOPO != "Condorcet" )
# Renommer plus simplement
rename(SCS, "sp" = "SPEC.TAXPRIO" ) -> SCS
rename(SCS, "Site" = "TOPO" ) -> SCS
rename(SCS, "genus" = "SPEC.GEN" ) -> SCS
rename(SCS, "familly" = "SPEC.GR2" ) -> SCS
# Retirer les observations contenant l'espèce : "Apis mellifera"
SCS <- filter(SCS, sp != "Apis mellifera" )
# Remplacement des noms d'espèces désuets
SCS$sp[SCS$sp == "Bombus (Bombus)  sp."] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus lucorum"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus terrestris"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Chalicodoma ericetorum"] <- "Megachile ericetorum"
SCS$genus[SCS$genus == "Chalicodoma"] <- "Megachile"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
# Remplacement du noms de sites
SCS$Site[SCS$Site == "Les Gourmandes de la Procession"] <- "Gourmandes"
# Réécriture des noms de familles
SCS$familly[SCS$familly == "ANDRENIDAE"] <- "Andrenidae"
SCS$familly[SCS$familly == "APIDAE"] <- "Apidae"
SCS$familly[SCS$familly == "COLLETIDAE"] <- "Colletidae"
SCS$familly[SCS$familly == "HALICTIDAE"] <- "Halictidae"
SCS$familly[SCS$familly == "MEGACHILIDAE"] <- "Megachilidae"
SCS$familly[SCS$familly == "MELITTIDAE"] <- "Melittidae"
SCS %>%
group_by(sp, Site, genus, familly, Nest_area) %>%
count(sp) -> df
df$N <- df$n
# Addition des genres avec la zone de nidification (au dessus du sol ou en dessous)
nest_substrat <- aggregate(N ~ sp + Nest_area, data = df, sum)
### Abondance
nest_substrat_ab <-  spread(nest_substrat, key = Nest_area , value = N)
# Ajoute une ligne total
nest_substrat_ab <- janitor::adorn_totals(nest_substrat_ab)
# Ajoute une colonne total
nest_substrat_ab$Total <- rowSums(nest_substrat_ab[, c("Cavities"  , "Snails",  "Stems" , "Variable" ,"Vegetation", "Wood" ,"Soil", "Walls")])
# Pourcentage rich Cavities
pct_ab_cav <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Cavities"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Next to stems
#pct_ab_nex <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Next to stems"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Snails
pct_ab_sna <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Snails"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Stems
pct_ab_ste <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Stems"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], digits = 2)
# Pourcentage rich Variable
pct_ab_var <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Variable"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Vegetation
pct_ab_veg <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Vegetation"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Wood
pct_ab_woo <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Wood"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
# Pourcentage rich Soil
pct_ab_soi <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Soil"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], digits = 2)
# Pourcentage rich Walls
pct_ab_wal <- round(nest_substrat_ab[nrow(nest_substrat_ab), "Walls"]/nest_substrat_ab[nrow(nest_substrat_ab), "Total"], 2)
nest_substrat_ab[nrow(nest_substrat_ab) + 1,] = c("Pourcentage", pct_ab_cav,pct_ab_sna,pct_ab_soi,pct_ab_ste, pct_ab_var,pct_ab_veg,pct_ab_wal,pct_ab_woo,"")
### Richesse
nest_substrat_rich <- nest_substrat
# Changer tous les chiffres d'abondances par 1
nest_substrat_rich$N[nest_substrat_rich$N > 0] <- 1
# Tableau avec colonne (Solitaire, clepto, ...)
nest_substrat_rich <-  spread(nest_substrat_rich, key = Nest_area , value = N)
# Ajoute une ligne total
nest_substrat_rich <- janitor::adorn_totals(nest_substrat_rich)
# Ajoute une colonne total
nest_substrat_rich$Total <- rowSums(nest_substrat_rich[, c("Cavities"  , "Snails",  "Stems" , "Variable" ,"Vegetation", "Wood" ,"Soil", "Walls")])
# Pourcentage rich Cavities
pct_rich_cav <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Cavities"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], 2)
# Pourcentage rich Next to stems
#pct_rich_nex <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Next to stems"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], 2)
# Pourcentage rich Snails
pct_rich_sna <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Snails"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], 2)
# Pourcentage rich Stems
pct_rich_ste <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Stems"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], digits = 2)
# Pourcentage rich Variable
pct_rich_var <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Variable"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], 2)
# Pourcentage rich Vegetation
pct_rich_veg <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Vegetation"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], 2)
# Pourcentage rich Wood
pct_rich_woo <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Wood"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], 2)
# Pourcentage rich Soil
pct_rich_soi <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Soil"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], digits = 2)
# Pourcentage rich Walls
pct_rich_wal <- round(nest_substrat_rich[nrow(nest_substrat_rich), "Walls"]/nest_substrat_rich[nrow(nest_substrat_rich), "Total"], 2)
nest_substrat_rich[nrow(nest_substrat_rich) + 1,] = c("Pourcentage", pct_rich_cav,pct_rich_sna,pct_rich_soi,pct_rich_ste, pct_rich_var,pct_rich_veg,pct_rich_wal,pct_rich_woo,"")
# Exportation tableur Excel
write_xlsx(nest_substrat_rich,"D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/Output/nest_substrat.xlsx")
# Exportation tableur Excel
write_xlsx(nest_substrat_ab,nest_substrat_rich,"D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/Output/nest_substrat.xlsx")
# Exportation tableur Excel
write_xlsx(nest_substrat_ab,nest_substrat_rich,"D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/Output/nest_substrat.xlsx")
my_df <- list(nest_substrat_ab,nest_substrat_rich)
# Exportation tableur Excel
write_xlsx(my_df, "D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/Output/nest_substrat.xlsx")
library("readxl")
library(dplyr)
library(plotly)
library(ggplot2)
library(viridis) # couleur daltonien
library(tidyr) # fonction gather
library("writexl")
# Import
# Tour PC
setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2")
# Import
# Tour PC
#setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2")
# Laptop
setwd("C:/Users/Jordan/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2")
# Import
soil <- read_excel("Soil_R.xlsx")
SpecCondStat <- read_excel("SpecCondStat.xls")
# Nom plus compact
SCS <- SpecCondStat
# Retirer le site de Condorcet
SCS <- filter(SCS, TOPO != "Condorcet" )
# Renommer plus simplement
rename(SCS, "sp" = "SPEC.TAXPRIO" ) -> SCS
rename(SCS, "sites" = "TOPO" ) -> SCS
# Retirer les observations contenant l'espèce : "XXX"
# SCS <- filter(SCS, SPEC.TAXPRIO != "Bombus (Bombus)  sp." )
# Remplacement des noms d'espèces désuets
SCS$sp[SCS$sp == "Bombus lucorum"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus terrestris"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Chalicodoma ericetorum"] <- "Megachile ericetorum"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
# Remplacement du noms de sites
SCS$sites[SCS$sites == "Les Gourmandes de la Procession"] <- "Gourmandes de la Procession"
soil$Site[soil$Site == "Les Gourmandes de la Procession"] <- "Gourmandes de la Procession"
# retirer les sp abondantes (bombus)
# SCS <- filter(SCS, sp != "Bombus pascuorum")
# SCS <- filter(SCS, sp != "Bombus (Bombus)  sp.")
# SCS <- filter(SCS, sp != "Terrestribombus  sp.")
# SCS <- filter(SCS, sp != "Bombus vestalis")
# SCS <- filter(SCS, sp != "Bombus hypnorum")
# SCS <- filter(SCS, sp != "Bombus hortorum")
# SCS <- filter(SCS, sp != "Bombus pratorum")
# SCS <- filter(SCS, sp != "Bombus lapidarius")
#### Abbréger le nom des sites
# Liste des Potagers
Potagers <- c("Abbaye St-Denis", "Rue de l'Egalite", "Chasse Cambier", "Mel Legumes", "Gourmandes de la Procession", "Jean d'Avesnes", "Parc du bois de Mons", "Jardin Suspendu", "Ecole de l'Esperance", "Fond du petit marais")
# Liste des Parcs
Parcs <- c("Village des abeilles", "Siege social", "Parc du Beffroi", "Stievenart", "Parc Bonaert")
### Sol
## Metaux
# Créer une colonne Code en fonction des types de sites
soil$Code <- fct_collapse(
soil$Site,
"Potager" = Potagers,
"Parc" = Parcs)
# Nom plus compact
SCS <- SpecCondStat
# Retirer le site de Condorcet
SCS <- filter(SCS, TOPO != "Condorcet" )
# Renommer plus simplement
rename(SCS, "sp" = "SPEC.TAXPRIO" ) -> SCS
rename(SCS, "sites" = "TOPO" ) -> SCS
# Retirer les observations contenant l'espèce : "XXX"
# SCS <- filter(SCS, SPEC.TAXPRIO != "Bombus (Bombus)  sp." )
# Remplacement des noms d'espèces désuets
SCS$sp[SCS$sp == "Bombus lucorum"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus terrestris"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Chalicodoma ericetorum"] <- "Megachile ericetorum"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
# Remplacement du noms de sites
SCS$sites[SCS$sites == "Les Gourmandes de la Procession"] <- "Gourmandes de la Procession"
soil$Site[soil$Site == "Les Gourmandes de la Procession"] <- "Gourmandes de la Procession"
# retirer les sp abondantes (bombus)
# SCS <- filter(SCS, sp != "Bombus pascuorum")
# SCS <- filter(SCS, sp != "Bombus (Bombus)  sp.")
# SCS <- filter(SCS, sp != "Terrestribombus  sp.")
# SCS <- filter(SCS, sp != "Bombus vestalis")
# SCS <- filter(SCS, sp != "Bombus hypnorum")
# SCS <- filter(SCS, sp != "Bombus hortorum")
# SCS <- filter(SCS, sp != "Bombus pratorum")
# SCS <- filter(SCS, sp != "Bombus lapidarius")
#### Abbréger le nom des sites
# Liste des Potagers
Potagers <- c("Abbaye St-Denis", "Rue de l'Egalite", "Chasse Cambier", "Mel Legumes", "Gourmandes de la Procession", "Jean d'Avesnes", "Parc du bois de Mons", "Jardin Suspendu", "Ecole de l'Esperance", "Fond du petit marais")
# Liste des Parcs
Parcs <- c("Village des abeilles", "Siege social", "Parc du Beffroi", "Stievenart", "Parc Bonaert")
### Sol
## Metaux
# Créer une colonne Code en fonction des types de sites
# soil$Code <- fct_collapse(
#     soil$Site,
#     "Potager" = Potagers,
#     "Parc" = Parcs)
# Garder pour rownames
soil_site_name <- select(soil, Site)
# Garder les métaux seulement
metal <- soil[, c("As", "Cd", "Cr", "Cu", "Hg", "Pb", "Ni", "Zn")]
row.names(metal) <- soil_site_name$Site
# Preparation des données
data_bee_sp <- select(SCS, sp, N, sites)
data_bee_sp <- as.data.frame(data_bee_sp)
data_bee_sp <- aggregate(N ~ sp + sites, data = data_bee_sp, sum)
data_bee_sp <- xtabs(N ~ sites + sp, data_bee_sp)
data_bee_sp <- type.convert(data_bee_sp)
spe <- data_bee_sp
# le "." signifie contre toutes les var env; 1 : signifie aucune var env
spe.cca <- cca(spe ~ ., metal)
library("readxl")
library(dplyr)
library(plotly)
library(ggplot2)
library(viridis) # couleur daltonien
library(tidyr) # fonction gather
#library("writexl")
# Tour PC
#setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW")
# Laptop
setwd("C:/Users/Jordan/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW")
# Import
IUCN_redlist <- read_excel("IUCN_bee_sp-each-site(genus-and-familly).xlsx")
# Réécriture des noms de familles
IUCN_redlist$familly[IUCN_redlist$familly == "ANDRENIDAE"] <- "Andrenidae"
IUCN_redlist$familly[IUCN_redlist$familly == "APIDAE"] <- "Apidae"
IUCN_redlist$familly[IUCN_redlist$familly == "COLLETIDAE"] <- "Colletidae"
IUCN_redlist$familly[IUCN_redlist$familly == "HALICTIDAE"] <- "Halictidae"
IUCN_redlist$familly[IUCN_redlist$familly == "MEGACHILIDAE"] <- "Megachilidae"
IUCN_redlist$familly[IUCN_redlist$familly == "MELITTIDAE"] <- "Melittidae"
# Addition des espèces avec la catégorie IUCN
IUCN_sp <- aggregate(N ~ sp + category, data = IUCN_redlist, sum)
# Addition des genres avec la catégorie IUCN
IUCN_gen <- aggregate(N ~ genus + category, data = IUCN_redlist, sum)
# Addition des familles avec la catégorie IUCN
IUCN_fam <- aggregate(N ~ familly + category, data = IUCN_redlist, sum)
View(IUCN_sp)
# Load the required packages
library(dplyr)
library(vegan) # specpool () estimateR() poolaccum() estaccumR()
library(ggplot2)
library(forcats )
library(reshape2)
library("readxl")
# Tour PC
setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW/Traits abeilles")
# Tour PC
#setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2/Traits abeilles")
# Laptop
setwd("C:/Users/Jordan/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2/Traits abeilles")
# Import
traits <- read_excel("Trait-bee-each-site.xlsx")
# Réécriture des noms de familles
traits$familly[traits$familly == "ANDRENIDAE"] <- "Andrenidae"
traits$familly[traits$familly == "APIDAE"] <- "Apidae"
traits$familly[traits$familly == "COLLETIDAE"] <- "Colletidae"
traits$familly[traits$familly == "HALICTIDAE"] <- "Halictidae"
traits$familly[traits$familly == "MEGACHILIDAE"] <- "Megachilidae"
traits$familly[traits$familly == "MELITTIDAE"] <- "Melittidae"
# Remplacement du noms de sites
traits$site[traits$site == "Les Gourmandes de la Procession"] <- "Gourmandes"
SCS %>%
group_by(sp, site) %>%
count(sp) -> df0
# Tour PC
setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW/Traits abeilles")
# Tour PC
#setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW/Traits abeilles")
# Laptop
setwd("C:/Users/Jordan/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW/Traits abeilles")
SpecCondStat <- read_excel("SpecCondStat_traits.xls")
# Nom plus compact
SCS <- SpecCondStat
# Retirer le site de Condorcet
SCS <- filter(SCS, TOPO != "Condorcet" )
# Renommer plus simplement
rename(SCS, "sp" = "SPEC.TAXPRIO" ) -> SCS
rename(SCS, "site" = "TOPO" ) -> SCS
# Retirer les observations contenant l'espèce : "Apis mellifera"
SCS <- filter(SCS, sp != "Apis mellifera" )
# Remplacement des noms d'espèces désuets
SCS$sp[SCS$sp == "Bombus (Bombus)  sp."] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus lucorum"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus terrestris"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Chalicodoma ericetorum"] <- "Megachile ericetorum"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
# Remplacement du noms de sites
SCS$site[SCS$site == "Les Gourmandes de la Procession"] <- "Gourmandes"
SCS %>%
group_by(sp, site) %>%
count(sp) -> df0
rename(df0, "tot" = "n" ) -> df0
df0 <- filter(df0, tot == "1")
View(df0)
# Load the required packages
library("readxl")
library(dplyr)
library(vegan) # specpool () estimateR() poolaccum() estaccumR()
library(ggplot2)
library(tidyr)
library(ade4)
library(plotly)
#library(adespatial)
#library(vegetarian)
library(ggplot2)
library(FD)
# Load the required packages
library("readxl")
library(dplyr)
library(vegan) # specpool () estimateR() poolaccum() estaccumR()
library(ggplot2)
library(tidyr)
library(ade4)
library(plotly)
#library(adespatial)
#library(vegetarian)
library(ggplot2)
#library(FD)
library(taxize)
# Load the required packages
library("readxl")
library(dplyr)
library(vegan) # specpool () estimateR() poolaccum() estaccumR()
library(ggplot2)
library(tidyr)
library(ade4)
library(plotly)
#library(adespatial)
#library(vegetarian)
library(ggplot2)
#library(FD)
#library(taxize)
library(iNEXT)
library(RColorBrewer)
library(reshape2)
# Chargé la fonction panelutils
source ('https://raw.githubusercontent.com/zdealveindy/anadat-r/master/scripts/NumEcolR2/panelutils.R')
# Import
# Tour PC
setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2")
# Import
# Tour PC
#setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2")
# Laptop
setwd("C:/Users/Jordan/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW2")
SpecCondStat <- read_excel("SpecCondStat.xls")
# Nom plus compact
SCS <- SpecCondStat
# Retirer le site de Condorcet
SCS <- filter(SCS, TOPO != "Condorcet" )
# Renommer plus simplement
rename(SCS, "sp" = "SPEC.TAXPRIO" ) -> SCS
rename(SCS, "sites" = "TOPO" ) -> SCS
# Retirer les observations contenant l'espèce : "XXX"
# SCS <- filter(SCS, SPEC.TAXPRIO != "Bombus (Bombus)  sp." )
# Remplacement des noms d'espèces désuets
SCS$sp[SCS$sp == "Bombus lucorum"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus terrestris"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Chalicodoma ericetorum"] <- "Megachile ericetorum"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
# Remplacement du noms de sites
SCS$sites[SCS$sites == "Les Gourmandes de la Procession"] <- "Gourmandes de la Procession"
# Preparation des données
data_bee_sp <- select(SCS, sp, N, sites)
data_bee_sp <- as.data.frame(data_bee_sp)
data_bee_sp <- aggregate(N ~ sp + sites, data = data_bee_sp, sum)
data_bee_sp <- xtabs(N ~ sites + sp, data_bee_sp)
data_bee_sp <- type.convert(data_bee_sp)
#Isolation du chunk
bee <- data_bee_sp
# Nombre d'espèces observées dans les 15 sites
(bee.nbsp <- specnumber(bee))
# Sites avec une richesse en espèces minimale et maximale observée
bee.nbsp[bee.nbsp == min(bee.nbsp)]
bee.nbsp[bee.nbsp == max(bee.nbsp)]
range(bee.nbsp)
# Abondance totale dans les 15 sites
(bee.abund <- rowSums(bee))
range(bee.abund)
# Abondance dans les sites avec le plus petit nombre d'espèces
bee.abund[bee.nbsp == min(bee.nbsp)]
# Abondance dans les sites avec le plus grand nombre d'espèces
bee.abund[bee.nbsp == max(bee.nbsp)]
# Nombre d'espèces dans les sites avec la plus petite abondance
bee.nbsp[bee.abund == min(bee.abund)]
# Nombre d'espèces dans les sites avec la plus grande abondance
bee.nbsp[bee.abund == max(bee.abund)]
out <- iNEXT(as.data.frame(t(data_bee_sp)), q = c(0,1,2), datatype ="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)
out1 <- out$AsyEst
View(out1)
library("readxl")
library(dplyr)
library(plotly)
library(ggplot2)
library(viridis) # couleur daltonien
library(tidyr) # fonction gather
library(gplots)
library(RColorBrewer)
library(reshape2)
library(forcats)
# Tour PC
setwd("D:/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW/")
library("readxl")
library(dplyr)
library(plotly)
library(ggplot2)
library(viridis) # couleur daltonien
library(tidyr) # fonction gather
library(gplots)
library(RColorBrewer)
library(reshape2)
library(forcats)
# Tour PC
# Laptop
setwd("C:/Users/Jordan/OneDrive - UMONS/UMONS/MA2/MEMOIRE/Statistique/R/STAT-MEMOIRE/RAW/")
# Import
SpecCondStat <- read_excel("SpecCondStat.xls")
# Nom plus compact
SCS <- SpecCondStat
## Nettoyage
# Retirer le site de Condorcet
SCS <- filter(SCS, TOPO != "Condorcet" )
# Renommer plus simplement
rename(SCS, "sp" = "SPEC.TAXPRIO" ) -> SCS
rename(SCS, "Site" = "TOPO" ) -> SCS
# Retirer les observations contenant l'espèce : "Apis mellifera"
SCS <- filter(SCS, sp != "Apis mellifera" )
# Remplacement des noms d'espèces désuets
SCS$sp[SCS$sp == "Bombus (Bombus)  sp."] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus lucorum"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Bombus terrestris"] <- "Terrestribombus  sp."
SCS$sp[SCS$sp == "Chalicodoma ericetorum"] <- "Megachile ericetorum"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
SCS$sp[SCS$sp == "Halictus tumulorum"] <- "Seladonia tumulorum"
# Remplacement du noms de sites
SCS$Site[SCS$Site == "Les Gourmandes de la Procession"] <- "Gourmandes"
# Conservation des NA pour la heatmap
#hm.data_bee_sp <- data_bee_sp
# Preparation des données
data <- select(SCS, sp, N, Site)
data <- as.data.frame(data)
data <- aggregate(N ~ sp + Site, data = data, sum)
data <- xtabs(N ~ Site + sp, data)
data <- type.convert(data)
# Remplacer les 0 par NA
data[data == 0] <- NA
# Rownames => Colonne
data <- as.data.frame(data)
data <- tibble::rownames_to_column(data, "Site")
View(data)
SCS %>%
group_by(sp, Site) %>%
count(sp) -> df1
rename(df1, "tot" = "n" ) -> df1
View(df1)
